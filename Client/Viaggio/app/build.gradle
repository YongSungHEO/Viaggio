apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion rootProject.targetSdkVersion

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.kotlin.viaggio"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode version_code.toInteger()
        versionName version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // workmanager
    def work_version = "1.0.0-rc01"
    implementation "android.arch.work:work-runtime-ktx:$work_version" // use -ktx for Kotlin+Coroutines
    implementation "android.arch.work:work-rxjava2:$work_version"

    //dagger
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //anko
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-support-v4-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$android_arch_lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$android_arch_lifecycle"

    // rxjava
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

//    // navigation
//    def nav_version = "1.0.0-beta01"
//    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
//    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"

    //firebase
    implementation 'com.google.firebase:firebase-core:16.0.7'
    implementation 'com.google.firebase:firebase-ml-vision:19.0.2'

    // viewPager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0-alpha01'

    // lottie
    implementation "com.airbnb.android:lottie:$lottie_version"

    // gilde
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'jp.wasabeef:glide-transformations:4.0.1'

    // camera
    implementation 'io.fotoapparat:fotoapparat:2.6.1'
}
//apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'
